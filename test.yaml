---
- name: Create EC2 Instance and Deploy Nginx
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Launch EC2 Instance
      amazon.aws.ec2_instance:
        instance_type: t2.micro
        image_id: ami-0fc5d935ebf8bc3bc
        key_name: keyforDestop
        region: us-east-1
        security_group: launch-wizard-5
        count: 1
        tags:
          Name: my-ec2-instance
        wait: yes
      register: ec2

    - name: Get EC2 Instance Public IP Address
      amazon.aws.ec2_instance_info:
        #region: us-east-1
        #service: ec2
        #action: describe_instances
        filters:
          instance-id: "{{ ec2.instances[0].instance_id }}"
      register: ec2_instance_info

    # - name: Send the content of a variable to a file
    #   lineinfile:
    #     path: /mnt/c/Users/kochf/Downloads/myscripts/hosts
    #     line: "{{ ec2_instance_info.instances[0].network_interfaces[0].association.public_ip }}"
    #     state: present
    
    # - name: Wait until the string "completed" is in the file /tmp/foo before continuing
    #   ansible.builtin.wait_for:
    #     path: /mnt/c/Users/kochf/Downloads/myscripts/hosts
    #     search_regex: "{{ ec2_instance_info.instances[0].network_interfaces[0].association.public_ip }}"


    #- name: Print the contents of the file
    #  debug:
    #    msg: "{{ ec2_instance_info.instances[0].network_interfaces[0].association.public_ip }}"

    #- name: print result
    #  ansible.builtin.debug:
    #    var: ec2_instance_info
    #  #verbosity: 2

    - name: Update Your Inventory File
      community.general.ini_file:
        dest: /mnt/c/Users/kochf/Downloads/myscripts/hosts
        section: webserver
        option: ec2_instance_ip
        value: "{{ ec2_instance_info.instances[0].network_interfaces[0].association.public_ip }}"
      


- name: Deploy Nginx on EC2 Instance
  hosts: webserver
  become: yes
  tasks:
    - name: Update package cache
      apt:
        update_cache: yes

    - name: Install Nginx
      apt:
        name: nginx
        state: present

    - name: Start Nginx
      service:
        name: nginx
        state: started
        enabled: yes